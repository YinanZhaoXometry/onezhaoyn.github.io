{"pageProps":{"note":{"id":"3iezwurw0dx7qo5zfgjqrqi","title":"Web 开发必学知识点 (原创翻译)","desc":"","updated":1677377900798,"created":1677377846514,"custom":{},"fname":"20181002-Web开发必学知识点","type":"note","vault":{"fsPath":"vault","name":"vault"},"contentHash":"3227169f5637de769cf079f30c3d70d1","links":[],"anchors":{"api-和用户体验":{"type":"header","text":"API 和用户体验：","value":"api-和用户体验","line":16,"column":0,"depth":3},"安全相关":{"type":"header","text":"安全相关","value":"安全相关","line":30,"column":0,"depth":3},"性能相关":{"type":"header","text":"性能相关","value":"性能相关","line":52,"column":0,"depth":3},"seo搜索引擎优化":{"type":"header","text":"SEO（搜索引擎优化）","value":"seo搜索引擎优化","line":66,"column":0,"depth":3},"技术相关":{"type":"header","text":"技术相关","value":"技术相关","line":82,"column":0,"depth":3},"漏洞修复":{"type":"header","text":"漏洞修复","value":"漏洞修复","line":98,"column":0,"depth":3},"其他":{"type":"header","text":"其他","value":"其他","line":110,"column":0,"depth":4}},"children":[],"parent":"9ulx2r70mqzuktc8d2y4dqt","data":{}},"body":"<h1 id=\"web-开发必学知识点-原创翻译\">Web 开发必学知识点 (原创翻译)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#web-开发必学知识点-原创翻译\"></a></h1>\n<blockquote>\n<p>写于：2018-10-02</p>\n</blockquote>\n<p><img src=\"/assets/images/2023-02-26-10-18-05.png\"></p>\n<blockquote>\n<p>StackExchange 上有一个关于 web 开发中需要注意的知识点的帖子非常火，已经有 2k 的点赞了，非常全也非常好，所以决定翻译出来供大家使用。\n原文链接：<a href=\"https://softwareengineering.stackexchange.com/questions/46716/what-technical-details-should-a-programmer-of-a-web-application-consider-before\">What should every programmer know about web development?</a>\n尽管大多数人对清单中所列都有所耳闻。但是个别的几条可能还没仔细了解过，或者没全弄明白，甚至没听过。</p>\n</blockquote>\n<h3 id=\"api-和用户体验\">API 和用户体验：<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#api-和用户体验\"></a></h3>\n<ul>\n<li>了解浏览器所兼容的标准并非完全一致，保证你的网站能兼容主流浏览器。起码在最新的<a href=\"https://en.wikipedia.org/wiki/Gecko_%28layout_engine%29\">Gecko</a>引擎（Firefox）、WebKit 引擎（Safari 以及个别移动端浏览器）、Chrome、IE 浏览器（非必须，可使用<a href=\"http://www.microsoft.com/Downloads/details.aspx?FamilyID=21eabb90-958f-4b64-b5f1-73d0a413c8ef&#x26;displaylang=en\">“应用兼容性 VPC 镜像”</a>测试）以及 Opera 中进行测试。还应该考虑在不同操作系统下，浏览器<a href=\"http://www.browsershots.org/\">渲染机制的不同性</a>。</li>\n<li>顾及网站的不同使用场景，而不仅仅顾及哪些主流浏览器：手机、读屏软件以及搜索引擎。举例来说，一些无障碍信息：<a href=\"http://www.w3.org/WAI/\">WAI</a>和<a href=\"http://www.section508.gov/\">Section508</a>，移动开发：<a href=\"http://mobiforge.com/\">MobiForge</a>。</li>\n<li>部署 Staging：如何部署网站更新而不影响用户访问。准备一个或多个测试或 staging 的环境用于架构、代码修改或者内容替换，另外应保证部署过程完全受控且不会带来任何问题。然后通过自动化的将经过测试的代码部署到生产环境中。需使用版本管理工具（git，Subversion 等）以及自动化构建工具（Ant, NAnt, etc.)等，来实现该功能。</li>\n<li>别把不友好的错误信息直接展示给用户。</li>\n<li>别把用户的邮箱地址以明文显示出来，防止用户被垃圾邮件骚扰。</li>\n<li>为用户的链接加上<a href=\"https://en.wikipedia.org/wiki/Nofollow\"><code>rel=nofollow</code></a>属性，以避免垃圾网站的干扰。</li>\n<li>为<a href=\"http://www.codinghorror.com/blog/archives/001228.html\">网站限制设置一些限制条件</a>，这也属于安全范畴。</li>\n<li>学习如何实现<a href=\"http://www.codinghorror.com/blog/archives/001228.html\">渐进式增强 Progressive Enhancement</a>。</li>\n<li>POST 请求成功后应进行页面跳转，以避免刷新页面重复提交请求。</li>\n<li>重点关注无障碍 Accessibility，这永远是个好点子，个别情况也属于<a href=\"http://www.section508.gov/\">法律要求</a>。可以参考<a href=\"http://www.w3.org/WAI/intro/aria\">WAI_ARIA</a>和<a href=\"http://www.w3.org/TR/WCAG20/\">WCAG 2</a>的相关资源。</li>\n<li>学习<a href=\"http://www.sensible.com/dmmt.html\">别让我考虑怎么做</a></li>\n</ul>\n<h3 id=\"安全相关\">安全相关<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#安全相关\"></a></h3>\n<ul>\n<li>需要慢慢消化吸收<a href=\"http://www.owasp.org/index.php/Category:OWASP_Guide_Project\">OWASP 开发指南</a>，这篇文章所涵盖的 web 安全相关知识非常全面。</li>\n<li>学习注入攻击以及如何防范，尤其是<a href=\"http://en.wikipedia.org/wiki/SQL_injection\">SQL 注入</a>。</li>\n<li>对于用户输入的内容，以及任何通过请求发送的内容（尤其是含有 cookie 和隐式表单数据的请求）要保持警惕。</li>\n<li>使用“盐”对密码进行哈希加密，对于不同的数据条目使用不同的“盐”，以避免彩虹攻击(rainbow attacks)。使用慢哈希算法储存密码，比如 bcrypt（时间验证）或 scrypt（更强大，同时也较新）（<a href=\"http://codahale.com/how-to-safely-store-a-password/\">如果安全的保存密码</a>）。避免直接使用 MD5 或 SHA 等类型。</li>\n<li><a href=\"https://stackoverflow.com/questions/1581610/how-can-i-store-my-users-passwords-safely/1581919#1581919\">不要使用自创的身份验证系统</a>。尤其在细节上和无法测试等方面很容易出错，甚至只有当你的网站被黑客攻击以后才发现有漏洞。</li>\n<li>学习处理信用卡的一些规则。（<a href=\"https://stackoverflow.com/questions/51094/payment-processors-what-do-i-need-to-know-if-i-want-to-accept-credit-cards-on-m\">同时也可以了解一下这个问题</a>）</li>\n<li>对于用户登陆页面，以及任何需要输入敏感信息（比如信用卡信息）的页面，使用 SSL/HTTPS。<a href=\"https://letsencrypt.org/\">Let's Encrypt</a>可以提供免费的证书。</li>\n<li>避免<a href=\"https://en.wikipedia.org/wiki/Session_hijacking#Prevention\">session 劫持</a>。</li>\n<li>避免跨站脚本攻击(XSS)。</li>\n<li>避免跨站请求伪造攻击(CSRF)。</li>\n<li>避免点击劫持(<a href=\"https://en.wikipedia.org/wiki/Clickjacking\">Clickjacking</a>)。</li>\n<li>保持你的系统里的所有软件为最新版。</li>\n<li>采取防范措施，保证数据库的连接是安全的。</li>\n<li>了解最新的攻击手段以及危及你的网站的技术漏洞。</li>\n<li>学习<a href=\"https://code.google.com/archive/p/browsersec/\">Google 浏览器安全手册</a>。</li>\n<li>学习<a href=\"http://amzn.com/0470170778\">网络应用黑客手册</a>。</li>\n<li>考虑使用<a href=\"https://en.wikipedia.org/wiki/Principle_of_least_privilege\">最小特权原则</a>。尝试使用<a href=\"https://security.stackexchange.com/questions/47576/do-simple-linux-servers-really-need-a-non-root-user-for-security-reasons\">非 root 账户</a>运行你的 app 服务器。（这是一个<a href=\"http://tomcat.apache.org/tomcat-8.0-doc/security-howto.html#Non-Tomcat_settings\">tomcat 的示例</a>）</li>\n<li>在所有由用户提供的含有<code>target=\"_blank\"</code>的链接中，加上<code>res=\"noopener noreferrer\"</code>，以避免目标页面中的 JavaScript 对页面进行重定向，比如重定向至一个伪登陆页面，<a href=\"https://dev.to/phishing\">更多信息</a>。</li>\n<li>可以使用<a href=\"https://csp.withgoogle.com/docs/index.html\">验证内容安全政策(strict Content Security Policy)</a>。</li>\n</ul>\n<h3 id=\"性能相关\">性能相关<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#性能相关\"></a></h3>\n<ul>\n<li>必要时使用缓存，理解并使用<a href=\"http://www.mnot.net/cache_docs/\">HTTP 缓存特性</a>以及<a href=\"http://www.w3.org/TR/2011/WD-html5-20110525/offline.html\">HTML5 Manifest</a>。</li>\n<li>对图片进行优化：不要用 20KB 的图片作为平铺背景。</li>\n<li>学习如何使用<a href=\"http://developer.yahoo.com/performance/rules.html#gzip\">gzip 等技术</a>压缩内容。</li>\n<li>将多个样式表或脚本文件进行合并，以减少浏览器连接/请求的次数，同时设置 gzip 对重复的文件进行压缩。</li>\n<li>浏览一下<a href=\"http://developer.yahoo.com/performance/\">雅虎出色性能</a>网站，里面有很多不错的文章，包括如何提升前端性能以及如何使用<a href=\"http://developer.yahoo.com/yslow/\">YSlow</a>工具（需要 Firefox, Safari, Chrome 或 Opera）。另外，<a href=\"https://developers.google.com/speed/docs/best-practices/rules_intro\">Google 网页速度</a>（同<a href=\"https://developers.google.com/speed/pagespeed/insights_extensions\">浏览器插件一同使用</a>）是另一款性能测试工具，它还能对你网站的图片进行优化。</li>\n<li>使用<a href=\"/\">SVI sprite 技术</a>用于小的彼此相关的图片，比如：工具栏。SVG 上色有些困难，可以看看<a href=\"/\">这篇文章</a>。</li>\n<li>高访问量的网站应考虑拆分组件并部署在不同的服务器上，比如：</li>\n<li>静态资源（如：图片、CSS、JS 脚本以及其他不需要 cookie 权鉴才能访问的文件）应部署在一个单独的<a href=\"http://blog.stackoverflow.com/2009/08/a-few-speed-improvements/\">不使用 cookie</a>的服务器上，这样做是因为在向网站发送的时候，无论是主域名还是其子域名请求都会附带 cookie。这里有个方法是使用 CDN（内容分发网络），但是需注意 CDN 请求可能会失败，这里可以通过使用备用 CDN 或者直接提供本地备份。</li>\n<li>减少浏览器渲染页面所需要发送 HTTP 请求的总次数。</li>\n<li>选择一个模板引擎并使用任务管理程序 gulp 或 grunt 进行渲染/预渲染。</li>\n<li>保证你网站根目录下有一个<code>favicon.ico</code>文件。因为即使 HTML 未引入该文件，浏览器还是会自动请求该文件。如果没有<code>/favicon.ico</code>文件则会导致大量 404 报错，占用你服务器的带宽。</li>\n</ul>\n<h3 id=\"seo搜索引擎优化\">SEO（搜索引擎优化）<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#seo搜索引擎优化\"></a></h3>\n<ul>\n<li>使用搜索引擎友好的 URL，例如：用 <code>example.com/pages/45-article-title</code> 而非 <code>example.com/index.php?page=45</code></li>\n<li>如果使用<code>#</code>用于动态内容变化，那么把<code>#</code>变为<code>#!</code>然后</li>\n<li>不要使用诸如<a href=\"https://ux.stackexchange.com/questions/12100/why-shouldnt-we-use-the-word-here-in-a-textlink\">\"请点这儿\"</a>的链接，这样做就是在是浪费 SEO 的机会，这同时也为使用读屏软件的用户带来一些困难。</li>\n<li>创建一个<a href=\"http://www.sitemaps.org/\">XML 网站地图</a>，最好将其放在默认位置<code>/sitemap.xml</code>。</li>\n<li>当有多个 URL 指向同一个内容时使用<a href=\"http://googlewebmastercentral.blogspot.com/2009/02/specify-your-canonical.html\">&#x3C;link rel=\"canonical\" ... /></a>，该问题也可以通过<a href=\"http://www.google.com/webmasters/\">Google 网络管理员工具</a>进行处理。</li>\n<li>使用<a href=\"http://www.google.com/webmasters/\">Google 网络管理员工具</a>和<a href=\"http://www.bing.com/toolbox/webmaster\">Bing 网络管理员工具</a>。</li>\n<li>从网站上线开始就安装使用<a href=\"http://www.google.com/analytics/\">Google Analytics</a>（或者其他开源分析工具如<a href=\"http://piwik.org/\">Piwik</a>）。</li>\n<li>了解<a href=\"https://en.wikipedia.org/wiki/Robots_exclusion_standard\">robots.txt</a>的作用以及搜索引擎爬虫的工作方式。</li>\n<li>将<code>www.example.com</code>的请求重定向（用<code>301 Moved Permanently</code>）至<code>example.com</code>（或反过来）以避免两个网址同时占用 Google 排名。</li>\n<li>了解个别爬虫的工作还是有一定问题的。</li>\n<li>如果你有一些非文本的内容需要在 Google’s sitemap 中，比如视频。<a href=\"https://stackoverflow.com/questions/72394/what-should-a-developer-know-before-building-a-public-web-site#167608\">Tim Farley 回答</a>或许可以让你看到很多有价值的东西。</li>\n</ul>\n<p><img src=\"/assets/images/2023-02-26-10-18-18.png\"></p>\n<h3 id=\"技术相关\">技术相关<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#技术相关\"></a></h3>\n<ul>\n<li>学习<a href=\"http://www.ietf.org/rfc/rfc2616.txt\">HTTP 协议</a>，以及 GET、POST、session、cookie 以及“无状态”等概念。</li>\n<li>让你的<a href=\"http://www.w3.org/TR/xhtml1/\">XHTML</a>/<a href=\"http://www.w3.org/TR/REC-html40/\">HTML</a>和<a href=\"http://www.w3.org/TR/CSS2/\">CSS</a>符合<a href=\"http://www.w3.org/TR/\">W3C 规范</a>，并确认它们都是<a href=\"http://validator.w3.org/\">合格的</a>。我们最终的目标是避免浏览器的怪异模式（quiks mode），这也将使得网站对于非标准浏览器（如读屏软件和移动设备）更加友好。</li>\n<li>学习浏览器是如何处理 JavaScript 的。</li>\n<li>学习浏览器是如何加载 JavaScript、CSS 样式表和其他资源的，并了解其对视觉上的影响。一般认为<a href=\"https://developer.yahoo.com/blogs/ydn/high-performance-sites-rule-6-move-scripts-bottom-7200.html\">脚本应该放在页面的底部</a>，但分析程序或 HTML5 填充程序属于例外。</li>\n<li>学习 JavaScript 的沙箱的工作原理，尤其是当你想使用 iframe 时。</li>\n<li>注意 JavaScript 可以被禁用或者将要被禁用，而 AJAX 将成为插件，而非必须。尽管人们都普遍使用它们，但请注意<a href=\"http://noscript.net/\">NoScript</a>已经越来越火，移动设备工作方式有所不同，同时 Google 在收录网站的时候并不会运行你的 JavaScript 代码。</li>\n<li>学习<a href=\"http://www.bigoakinc.com/blog/when-to-use-a-301-vs-302-redirect/\">301 和 302 重定向状态码之间的区别</a>（这也是一个 SEO 问题）。</li>\n<li>尽可能的了解你将要的部署平台。</li>\n<li>考虑使用<a href=\"https://stackoverflow.com/questions/11578819/css-reset-what-exactly-does-it-do\">“重置样式表”</a>或<a href=\"http://necolas.github.com/normalize.css/\">normalize.css</a>。</li>\n<li>考虑使用 JavaScript 框架（例如<a href=\"/\">jQuery</a>，<a href=\"http://mootools.net/\">MooTools</a>，<a href=\"http://www.prototypejs.org/\">Prototype</a>，<a href=\"http://dojotoolkit.org/\">Dojo</a>或<a href=\"http://developer.yahoo.com/yui/3/\">YUI 3</a>），它们会很好的兼容于不同的浏览器。</li>\n<li>把视觉效果和 JS 框架合在一起讨论，考虑使用一个 Service，如：<a href=\"http://developers.google.com/speed/libraries/devguide\">Google Libraries API</a> 来装载框架，这样可以让浏览器可能早就把这个 JS 框架已经 cache 了而不需要再从你的网站上下载了。</li>\n<li>不要重新造轮子，在开始工作之前找找有没有类似的组件或示例。有 99％的可能性某人已经完成并发布了 OSS 版本的代码。</li>\n<li>另外，在了解你的需求之前，一开始不要恨不得把 20 个库都用上。尤其是客户端，保持轻量级、快速和灵活性总是更重要的。</li>\n</ul>\n<h3 id=\"漏洞修复\">漏洞修复<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#漏洞修复\"></a></h3>\n<ul>\n<li>明白你将花费 20％的时间写编码，80％的时间维护，所以写代码的时候要谨慎。</li>\n<li>设计一个好的错误报告机制。</li>\n<li>设计一个入口可以让用户与你取得联系，向你提出建议和批评。</li>\n<li>写项目文档，这样可以让维护你的软件和系统的人更容易上手。</li>\n<li>常备份（也确保这些备份有效）！制定备份恢复策略，而不仅仅是备份策略。</li>\n<li>使用版本控制工具来备份文件，例如：<a href=\"http://subversion.apache.org/\">Subversion</a>，<a href=\"http://mercurial.selenic.com/\">Mercurial</a>或<a href=\"http://git-scm.org/\">Git</a>。</li>\n<li>别忘了做验收测试。可以使用 Selenium 这样的框架。如需要进行自动化测试，可以使用持续集成工具，例如<a href=\"http://jenkins-ci.org/\">Jenkins</a>。</li>\n<li>使用<a href=\"http://logging.apache.org/log4j/\">log4j</a>，<a href=\"http://logging.apache.org/log4net/\">log4net</a>或<a href=\"http://log4r.rubyforge.org/\">log4r</a>等框架，以确保你有足够的日志。如果出了问题，这是可以让你快速找到问题的方式。</li>\n<li>记录日志时，确保你记录了你捕获了处理和未处理异常。报告和分析日志可以让你知道你网站的问题。</li>\n</ul>\n<h4 id=\"其他\">其他<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#其他\"></a></h4>\n<ul>\n<li>实施服务器端和客户端监控和分析（应该是主动的而不是被动的）。</li>\n<li>使用 UserVoice 和 Intercom（或其他类似的工具）等服务，可以让你和用户保持紧密的联系。</li>\n<li>遵从<a href=\"http://nvie.com/about/\">Vincent Driessen</a>的<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\">Git 分支模型</a>\n这里有多的东西被省略了，不是因为它们没用，而是因为它们要么太细、超出范围，要么对于想要了解自己想知道的知识的人它们有点太宽泛了。文章可能有遗漏或者有错误，所以请随意编辑这篇帖子。</li>\n</ul>","noteIndex":{"id":"9ulx2r70mqzuktc8d2y4dqt","title":"Root","desc":"","updated":1677372670607,"created":1677372670607,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault","name":"vault"},"contentHash":"d1b3b549bffbc9406db1ab2a62f7532a","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":2}},"children":["06npfpt8dfn6bek5i4ot77o","2qgkc58zn6cl7flma4g7msu","di3ufysjttt06q6allkds6y","n140devp4qgpdzgu03kp2a4","3iezwurw0dx7qo5zfgjqrqi","namt3sv2t4my5y07vzlqhf3","x26u7mxd81wcam73qz7b0gk","h1fu09ilp1qb1ljhczwg7n7","i1nu3sxndp3cuo3lwzuz203","b50kz068s83h4oubvlxogkw"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault","name":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.85.0","enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Yinan Zhao's Blog","description":"个人博客"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://onezhaoyn.github.io","hierarchyDisplayTitle":"子集文章","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}